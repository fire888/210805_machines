{"version":3,"sources":["helpers/util_emitter.js","store/actions.js","constants/constants_replicies.js","helpers/util_translate.js","componentsReact/UserReplicies.js","componentsReact/BotAnswers.js","componentsReact/App.js","helpers/util_keyBoard.js","assets/skybox/px.jpg","assets/skybox/nx.jpg","assets/skybox/py.jpg","assets/skybox/ny.jpg","assets/skybox/pz.jpg","assets/skybox/nz.jpg","assets/matIronBox/posx.jpg","assets/matIronBox/negx.jpg","assets/matIronBox/posy.jpg","assets/matIronBox/negy.jpg","assets/matIronBox/posz.jpg","assets/matIronBox/negz.jpg","assets/level-rooms.obj","assets/floor_outer_map.jpg","assets/botMap.png","constants/constants_elements.js","assets/botAnim2.glb","assets/13610.glb","assets/13611.glb","helpers/utils_loadAssets.js","store/actionByChangeQuadrant.js","helpers/helper_prepareMeshesFromAssets.js","shaders/saturate.js","components/component_collisionFloor.js","components/component_collisionWalls.js","components/component_checkNearItem.js","entities/createPlayer.js","systems/systemHtml_intro.js","systems/system_level.js","entities/Bot.js","helpers/util_GLTFcopy.js","systems/system_bots.js","store/createStore.js","index.js","helpers/util_deviceResizer.js","helpers/util_frameUpater.js","entities/createStudio.js","systems/system_machines.js"],"names":["eventEmitter","getOrCreateArrFromObj","obj","key","emitter","storage","emit","id","data","forEach","action","subscribe","callback","push","filter","item","showAll","s","length","console","log","createEmitter","startPlay","dispatch","type","newQuadrant","environmentMode","showBackground","startFinalFog","clickFullScreen","exitFullScreen","clickInfo","val","mode","toggleMachine","toggleName","toggleDialog","clickPhrase","r","phrase","setTimeout","levelEvent","is","isDialog","toggleButtonDialog","isButtonDialog","TRANSLATE_WORLDS","currentLanguage","keyLanguage","t","UserReplicies","connect","state","userReplicies","app","ui","props","className","map","onClick","q","Math","floor","random","BotAnswers","botAnswers","a","MORE_INFO","name","text","pr","isShowClickFullScreen","isShowButtFullScreen","isShowInfo","isShowFinalMessage","valueMachineName","useState","isOpenInfo","changeShowInfo","style","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","href","target","KeyBoard","keys","keyUpdate","keyCode","isDown","document","addEventListener","event","ASSETS_TO_LOAD","filename","levelRoomsSrc","px","pxjpg","nx","nxjpg","py","pyjpg","ny","nyjpg","pz","pzjpg","nz","nzjpg","pxjpg2","nxjpg2","pyjpg2","nyjpg2","pzjpg2","nzjpg2","botMap","mapFloorOuter","wrap","MATERIALS_CONFIG","mat","color","emissive","specular","shininess","bumpMap","bumpScale","envMap","reflectivity","skinning","S","FRAME_UPDATE","FLOORS_CONF","fogNear","fogFar","backgroundImgKey","studioConfig","canId","rendererCon","antialias","clearColor","backgroundColor","amb","strength","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","lightDataOne","objLoader","textureLoader","gltfLoader","cubeTextureLoader","CHANGE_LAYER_STATE","oldState","newState","oldQuadrant","emitData","emitKey","backgroundImg","counter","levelState","getEmitsByChangeQuadrant","playerOldQ","playerNewQ","i","getData","conf","createCheckerNewQuadrant","update","x","y","z","currentQuadrant","isChanged","dataToLoad","assets","index","loadAsset","load","model","checkComplete","result","createMaterials","wrapS","wrapT","THREE","mapsKeys","materials","keyMap","Saturate","uniforms","value","vertexShader","fragmentShader","FLOORS_ARRAY","setItemToFloorsCollision","removeItemFromFloorsCollision","mesh","WALLS_ARRAY","setItemToWallCollision","removeItemFromWallCollision","arrItems","createPlayer","emitterLink","camera","isButtonsDisabled","isBlocked","mainObj","position","fromArray","rotation","frontObj","add","strenth","light","checkFloors","objFromLink","offset","delta","objFrom","vec3Src","vec3Ray","isDisable","raycasterDown","check","updateData","copy","intersectsFloor","intersectObjects","distance","count","point","start","createComponentCollisionFloors","checkWalls","objToLink","objTo","vec3Src2","vec3Ray2","raycasterWalls","getWorldPosition","sub","intersectsWalls","createComponentCollisionWalls","checkNearItem","distanceTo","userData","nearPlayer","toNear","createCheckerNearItem","oldY","countDropped","isGameComplete","arrMachines","pPos","translateZ","toggleFinalMessage","isOpen","getObj","getCamera","setToPos","set","loader","querySelector","offsetLoader","isAnimateLoader","loaderTimeOut","marginLeft","STANDART_ROOMS","START_ROOMS","OFFSETS","Bot","this","inScene","_state","_targetAngle","container","_modelGroup","PI","_objFrom","_objTo","gltf","clone","animations","scene","skinnedMeshes","traverse","node","isSkinnedMesh","cloneBones","cloneSkinnedMeshes","isBone","skeleton","cloneSkinnedMesh","orderedCloneBones","bones","cloneBone","bind","boneInverses","matrixWorld","GLTFCopy","botScene","children","material","botMaterial","_animations","_mixer","_walkAction","clipAction","play","timeScale","_speakAction","_componentCollision","_updateState","_collisionMeshes","visible","stop","lookAt","_startRotate","abs","_startGo","arrWalls","intersectObject","appData","sceneEnvironment","playerQuadrant","oldDialogPlayerQuadrant","isStartCorridorShow","history","botIndex","phraseIndex","phrasesData","phrases","rootReducer","combineReducers","isNewBot","isCanChangeBotIndex","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","appWrapper","openAppFullScreenIfMobile","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","resize","e","width","height","fontSize","max","min","fullscreenElement","createDeviceResizer","init","emitFrameUpdate","time","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","createFrameUpdater","TWEEN","studio","canvas","renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","lightA","getState","background","fog","composer","EffectComposer","size","aspect","updateProjectionMatrix","addToScene","oldFogNear","oldFogFar","oldColor","oldBackgroundImgKey","startData","endData","to","onUpdate","setCamera","cam","addPass","RenderPass","ShaderPass","createStudio","player","rooms","allMeshes","collisionsBotsRooms","child","includes","geometry","wall","green","road","prepareMeshesFromAssets","group","objRooms","createRoom","kv","instanceKey","objKey","typeLevelChange","isAddBot","removeRoom","remove","isRemoveBot","startL","l","wentLevels","flagIsSpecial","initState","saveOldQuadrant","saveNewQuadrant","saveIsStartCorridorShow","keyCreateRoom","newMode","oldKv","curKv","createLevel","systemBots","iron","bot","groupBots","arrBots","setCollisionMesh","removeCollisionMesh","botWorldPos","prepareToSay","createSystemBots","sustemMachines","arr","m13610","setHex","needsUpdate","scale","m13611","saveIsNearMachine","isNearMachine","createSystemMachines","checkerNewQuadrant","arrEmitData","createActionByChangedQuadrant","startButtons","progressWrapper","display","dataset","lang","showStartButton","Promise","resolve","OBJLoader","GLTFLoader","then"],"mappings":"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EAAG,oCACH2B,MAAO,QACPpD,WAAY,eAQxB,CACImT,QAAS,CACL,CACIhS,EAAG,iDACHM,EAAG,gCACH2B,MAAO,YACPpD,WAAY,MAEhB,CACImB,EAAG,8BACHM,EAAG,iBACH2B,MAAO,QACPpD,WAAY,QAOxB,CACImT,QAAS,CACL,CACIhS,EAAG,0BACHM,EAAG,uBACH2B,MAAO,YACPpD,WAAY,MAEhB,CACImB,EAAG,mCACHM,EAAG,2BACH2B,MAAO,QACPpD,WAAY,QAMxB,CACImT,QAAS,CACL,CACIhS,EAAG,8CACHM,EAAG,iCACH2B,MAAO,QACPpD,WAAY,eAaxB,CACImT,QAAS,CACL,CACIhS,EAAG,0DACHM,EAAG,8BACH2B,MAAO,YACPpD,WAAY,MAEhB,CACImB,EAAG,+BACHM,EAAG,4BACH2B,MAAO,QACPpD,WAAY,QAOxB,CACImT,QAAS,CACL,CACIhS,EAAG,gCACHM,EAAG,uDACH2B,MAAO,YACPpD,WAAY,MAEhB,CACImB,EAAG,8BACHM,EAAG,qDACH2B,MAAO,QACPpD,WAAY,QAKxB,CACImT,QAAS,CACL,CACIhS,EAAG,uCACHM,EAAG,wCACH2B,MAAO,QACPpD,WAAY,eAQxB,CACImT,QAAS,CACL,CACIhS,EAAG,2DACHM,EAAG,mCACH2B,MAAO,YACPpD,WAAY,MAEhB,CACImB,EAAG,uBACHM,EAAG,6DACH2B,MAAO,QACPpD,WAAY,QAMxB,CACImT,QAAS,CACL,CACIhS,EAAG,2CACHM,EAAG,uBACH2B,MAAO,YACPpD,WAAY,MAEhB,CACImB,EAAG,qBACHM,EAAG,gDACH2B,MAAO,QACPpD,WAAY,QAMxB,CACImT,QAAS,CACL,CACIhS,EAAG,wBACHM,EAAG,4BACH2B,MAAO,YACPpD,WAAY,MAEhB,CACImB,EAAG,2BACHM,EAAG,qCACH2B,MAAO,QACPpD,WAAY,eAQxB,CACImT,QAAS,CACL,CACIhS,EAAG,4BACHM,EAAG,+CACH2B,MAAO,YACPpD,WAAY,MAEhB,CACImB,EAAG,mCACHM,EAAG,yBACH2B,MAAO,QACPpD,WAAY,QAOxB,CACI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","file":"static/js/main.d38decd1.chunk.js","sourcesContent":["let eventEmitter = null\r\n\r\nconst createEmitter = () => {\r\n    const storage = {}\r\n    return {\r\n        emit: id => data => getOrCreateArrFromObj(storage)(id).forEach(action => action(data)),\r\n        subscribe: id => callback => {\r\n            getOrCreateArrFromObj(storage)(id).push(callback)\r\n            return () => storage[id] = storage[id].filter(item => item !== callback)\r\n        },\r\n        showAll () {\r\n            const s = {}\r\n            for (let key in storage) {\r\n                s[key] = storage[key].length\r\n            }\r\n            console.log(s)\r\n        },\r\n    }\r\n}\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\nexport const emitter = eventEmitter = eventEmitter || createEmitter()\r\n\r\n\r\n\r\n\r\n\r\n","import { emitter } from '../helpers/util_emitter'\r\n\r\n\r\nexport const startPlay = dispatch => ({\r\n    startPlay: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'outer',\r\n    }),\r\n    showBackground: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'back',\r\n    }),\r\n    startFinalFog: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'start',\r\n    }),\r\n})\r\n\r\n\r\nexport const showMessages = dispatch => ({\r\n    toggleFinalMessage: val => dispatch({\r\n        type: 'TOGGLE_FINAL_MESSAGE',\r\n        mode: val,\r\n    })\r\n})\r\n\r\n\r\nexport const clickFullScreen = dispatch => ({\r\n    clickFullScreen: () => {\r\n        dispatch({\r\n            type: 'CLICK_FULL_SCREEN',\r\n        })\r\n    },\r\n\r\n    exitFullScreen: () => {\r\n        dispatch({\r\n            type: 'EXIT_FULL_SCREEN',\r\n        })\r\n    },\r\n})\r\n\r\n\r\nexport const clickInfo = dispatch => {\r\n    return ({\r\n        clickInfo: val => {\r\n            dispatch({\r\n                type: 'INFO_TOGGLE',\r\n                mode: val,\r\n            })\r\n        },\r\n    })\r\n}\r\n\r\n\r\nexport const toggleMachine = dispatch => ({\r\n    toggleName: val => {\r\n        dispatch({\r\n            type: 'SET_NAME',\r\n            val,\r\n        })\r\n    }\r\n})\r\n\r\n\r\nexport const toggleDialog = dispatch => ({\r\n    clickPhrase: r => {\r\n        dispatch({\r\n            type: 'CLICK_PHRASE',\r\n            phrase: r,\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: 'PHRASE_EVENT',\r\n                phrase: r,\r\n            })\r\n\r\n            r.levelEvent && emitter.emit('changeLevelMode')(r.levelEvent)\r\n        }, 1000)\r\n    },\r\n\r\n\r\n    toggleDialog: is => {\r\n        dispatch({\r\n            type: 'TOGGLE_DIALOG',\r\n            isDialog: is,\r\n        })\r\n    },\r\n\r\n\r\n    toggleButtonDialog: is => {\r\n        dispatch({\r\n            type: 'TOGGLE_BUTTON',\r\n            isButtonDialog: is,\r\n        })\r\n    }\r\n})\r\n","export const TRANSLATE_WORLDS = {\r\n    'ru': {\r\n        'Hello there!': 'Привет !',\r\n        'Good day, carbon-based life form.':  'День добрый, кремниевая форма жизни.',\r\n    \r\n        'What is this place ?': 'Что это за место?',\r\n        'This is an entrance to the entropic hyper-maze.': 'Это вход в энтропийный гипер-куб.',\r\n    \r\n        'And what happens if I enter it ?': 'Что будет, если я войду в него?',\r\n        'This place is waiting.': 'Куб примет тебя.',\r\n    \r\n        'Say, where do these corridors lead ?': 'Куда ведут эти коридоры ?',\r\n        'They will lead you to the end.': 'Они приведут тебя к финалу.',\r\n    \r\n        'Ooook, I\\'m heading in then.': 'Я пошел дальше.',\r\n        'We will meet again.': 'Мы еще увидимся.',\r\n    \r\n        'What do you do here ?': 'Что ты здесь делаешь ?',\r\n        'Collecting the energy of the night.':  'Собираю энергию ночи.',\r\n    \r\n        'Can you tell me which way is out of here ?': 'В какую сторону мне идти ?',\r\n        'It is about the journey, not the destination': 'Здесь нет сторон. Здесь важна только длина пути.',\r\n    \r\n        'Hey, it looks like I\\'m walking in circles.': 'Я уже долго иду.',\r\n        'You have walked long enough.': 'Ты прошел достаточно для этого уровня.',\r\n    \r\n        'Meaning?': 'Что это значит?',\r\n        'The way to the next level is open to you.': 'Тебе открыт путь на одну ступень выше.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%%%% 22222222222222222 %%%%%%%%%%%%%%%%%%%%\r\n\r\n        'Hi, I heard I can find the \"end\" around here?': 'Я ищу финал.',\r\n        'Yes, I told you this is where the corridors lead.': 'Я помню о твоем пути.',\r\n\r\n        'Man, you all look the same.': 'Вы все так похожи.',\r\n        'We will meet again.': 'Мы еще встретимся.',\r\n\r\n        'Soooo, is that you again ?': 'Это снова ты?',\r\n        'Yes. All of me are myself.': 'Да, мы все едины.',\r\n\r\n        'Yeah, just like those corridors.': 'Тут все коридоры повторяются.',\r\n        'The meaning of everything is in being whole.': 'Суть всего в едином.',\r\n\r\n        'Am I there yet?': 'Как долго еще идти.',\r\n        'The sign will be given when you are.': 'Тебе будет знак, когда ты будешь готов.',\r\n\r\n        'How do I know what it is?': 'Как я узнаю этот знак.',\r\n        'I will give it to you.': 'Я подам его.',\r\n\r\n        'That\\'s the same exact corridor with you again.':  'Это одинаковый сегмент коридора с тобой.',\r\n        'You are ready for the next level.': 'Ты готов к новому уровню.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%% 33333333 %%%%%%%%%%%%%%%%%%%%%%\r\n\r\n        'Hey man, seriously, how do I get out of here ?':'Привет снова. Как выбраться. Уже надоело.',\r\n        'You have not reached the end.':'Ты не постиг дзен.',\r\n\r\n        'We\\'ll how do you reach it ?':'Ты-то как выходишь на поверхность?',\r\n        'I have my way.':'У меня свой путь.',\r\n\r\n        'So how\\'s your way btw ?':'Ты все на своем пути?',\r\n        'It is like yourself.': 'Как и ты.',\r\n\r\n        'And how long you\\'ve been on it ?': 'Как долго ты на нем?',\r\n        'These walls can hear us.': 'Эти стены нас слышат.',\r\n\r\n\r\n        'I think you\\'re weighing this corridor down.': 'Мне кажется, ты идешь в нагрузку к этому сегменту коридора.',\r\n        'The next level is open to you.': 'Тебе открыт следующий уровень.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%% 444444444444444 %%%%%%%%%%%%%%\r\n\r\n        'Look bud, next level or not, nothing\\'s changed at all !':  'Ничего не меняется.',\r\n        'Except the number of steps.': 'Меняется количество пройденных шагов.',\r\n        \r\n        'So this place counts steps ?': 'Это место считает шаги?',\r\n        'This is place is waiting.': 'Это место ждет.',\r\n        \r\n        'How long have you been here ?': 'Как давно ты здесь?',\r\n        'How long is irrelevant. What matters is the journey.': 'Время не имеет значения, значение имеет лишь путь.',\r\n        \r\n        'Then why aren\\'t you on one?': 'Но ты же не идешь.',\r\n        'With you walking for both of us, I do not have to.': 'Зато ты каждый раз проходишь мимо.',\r\n        \r\n        'Look, just make a new level, please.': 'Сделай новый уровень.',\r\n        'You are ready. It is waiting for you.': 'Ты готов - новый уровень ждет тебя.',\r\n\r\n    \r\n        // %%%%%%%%%%%%%%%%%% 5555555 %%%%%%%%%%%%%%%%%%%\r\n    \r\n        'Wait, you are this place! You control all its fragments.': 'Ты и есть это место. Ты управляешь сегментами.',\r\n        'You have almost reached the end.': 'Ты почти дошел до края.',\r\n        \r\n        'Why do you do this ?': 'Зачем тебе это?',\r\n        'It is my way to warp space. More movement. More fragments.': 'Это способ свернуть пространство. Больше движения. Больше сегментов.',\r\n        \r\n        'How many people have been through here ?': 'Как много путников попадало сюда?',\r\n        'Many are still here.': 'Многие из них до сих пор тут.',\r\n        \r\n        'So where are they?': 'Почему я их не встретил?',\r\n        'Everyone has a different system of fragments.': 'У каждого своя система сегментов.',\r\n        \r\n        'Will you let me out ?': 'Ты выпустишь меня?',\r\n        'All ways lead to the end.': 'Все стороны света открыты тебе.',\r\n        \r\n        'I wanna meet the others.': 'Я хочу встретить других.',\r\n        'The next level is waiting for you.': 'Тебе открыт новый уровень.',\r\n\r\n        // %%%%%%%%%%%%%%%%%%% 6666666666666666 %%%%%%%%%%%%%%%%%%\r\n\r\n        'Everything\\'s looped here.': 'Я вижу зарево?',\r\n        'Everything is looped with small differences.': 'Это зарево просветления. Ты близок',\r\n\r\n        'How many levels even are there ?': 'Все коридоры повторяются.',\r\n        'It all depends on you.': 'Все повторяется с небольшой разницей.',\r\n\r\n        'That\\'s it, I\\'m done.': 'Все мой путь окончен.',\r\n        'Have you reached your journey\\'s end ?': 'Ты отказываешься идти?',\r\n\r\n        'Yes, you mad bastard! I have !': 'Да, ты безумен.',\r\n        'Then I am giving you the sign.': 'Я освобождаю тебя.',\r\n\r\n\r\n\r\n\r\n        'open dialog': 'начать диалог',\r\n        'close dialog': 'закончить диалог',\r\n        'To be continued': 'Продолжение следует',\r\n        'chapter': 'глава',\r\n        'open': 'пуск',\r\n        'Author: ': 'Автор: ',\r\n        'link': 'ссылка',\r\n    }\r\n}\r\n","import { emitter } from './util_emitter'\r\nimport { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\n\r\nlet currentLanguage = 'en'\r\n\r\nemitter.subscribe('setLanguage')(keyLanguage => {\r\n    currentLanguage = keyLanguage\r\n})\r\n\r\n\r\nexport const t = val => (TRANSLATE_WORLDS[currentLanguage] && TRANSLATE_WORLDS[currentLanguage][val]) || val\r\n","import { connect } from 'react-redux'\r\nimport { toggleDialog } from '../store/actions'\r\nimport { t } from '../helpers/util_translate'\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    userReplicies: state.app.ui.userReplicies,\r\n})\r\n\r\n\r\n\r\n\r\nexport const UserReplicies = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"userReplicies\">\r\n            {props.userReplicies.map(item => (<button\r\n                    key={Math.floor(Math.random()* 100000)}\r\n                    onClick={() => {\r\n                        toggleDialog(props.dispatch).clickPhrase(item)\r\n                    }}>\r\n                    {t(item.q)}\r\n                </button>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import { connect } from 'react-redux'\r\nimport { t } from '../helpers/util_translate'\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    botAnswers: state.app.ui.botAnswers,\r\n})\r\n\r\n\r\n\r\n\r\nexport const BotAnswers = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"botAnswers\">\r\n            {props.botAnswers.map(item => (<div key={Math.floor(Math.random() * 100000)}>\r\n                    <div className=\"q\">{t(item.q)}</div>\r\n                    <div className=\"a\">{t(item.a)}</div>\r\n                </div>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import { UserReplicies } from './UserReplicies'\r\nimport { BotAnswers } from './BotAnswers'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { toggleDialog, clickFullScreen, clickInfo } from '../store/actions'\r\nimport { emitter } from '../helpers/util_emitter'\r\nimport { t } from '../helpers/util_translate'\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isButtonDialog: state.app.ui.isButtonDialog,\r\n    isDialog: state.app.ui.isDialog,\r\n    isShowClickFullScreen: state.app.ui.isShowButtFullScreen,\r\n    isShowInfo: state.app.ui.isShowInfo,\r\n    isShowFinalMessage: state.app.ui.isShowFinalMessage,\r\n\r\n    valueMachineName: state.app.ui.valueMachineName,\r\n})\r\n\r\n\r\nconst MORE_INFO = {\r\n    'm13610': {\r\n        name: '13610_Drum_Sander_v1_L2001',\r\n        text: 'All my life I\\'ve been sittin\\' at the table\\n' +\r\n            'Watchin\\' them kids, they\\'re living in a fable\\n' +\r\n            'Looks, luck, money and never left a\\'wishin\\'\\n' +\r\n            'But now it\\'s \\'bout time to raise up and petition'\r\n    },\r\n    'm13611': {\r\n        name: '13611_Thickness_Planer_v1_L2002',\r\n        text: 'All my life I\\'ve been sittin\\' at the table\\n' +\r\n            'Watching them kids, they\\'re living in a fable\\n' +\r\n            'Looks, luck, money and never left a\\'wishin\\'\\n' +\r\n            'Now it\\'s \\'bout time to stand up and petitio'\r\n    }\r\n}\r\n\r\n//let isOpenInfo = false\r\n\r\nfunction App(props) {\r\n    !pr.dispatch && (pr.dispatch = props.dispatch)\r\n\r\n    const [isOpenInfo, changeShowInfo] = useState(false);\r\n\r\n\r\n    return (\r\n        <div className=\"ui\">\r\n            {props.valueMachineName && <div className={'machine-name' + (isOpenInfo ? ' machine-name-big' : '')}>\r\n                <h2>{MORE_INFO[props.valueMachineName].name}</h2>\r\n                {isOpenInfo && <div>{MORE_INFO[props.valueMachineName] ? MORE_INFO[props.valueMachineName].text : '' }</div>}\r\n                <button\r\n                    style={{'padding': '10px'}}\r\n                    onClick={() => {\r\n                        console.log('click')\r\n                        changeShowInfo(!isOpenInfo)\r\n                       // isOpenInfo = !isOpenInfo\r\n                        console.log(isOpenInfo)\r\n                    }}>{isOpenInfo ? 'close info' : 'more info'}</button>\r\n            </div>}\r\n            {props.isButtonDialog && (\r\n                <button\r\n                    className=\"butt-toggleDialog\"\r\n                    onClick={() => {toggleDialog(props.dispatch).toggleDialog(!props.isDialog)}}>\r\n                    {props.isDialog ? t('close dialog') : t('open dialog') }\r\n                </button>)}\r\n\r\n\r\n            {!props.isDialog && (\r\n                <button\r\n                    className=\"butt-left control\"\r\n                    onMouseDown={() => emitter.emit('mouseDown')('butt-left')}\r\n                    onTouchStart={() => emitter.emit('mouseDown')('butt-left')}\r\n                    onMouseUp={() => emitter.emit('mouseUp')('butt-left')}\r\n                    onTouchEnd={() => emitter.emit('mouseUp')('butt-left')}>\r\n                    &#9668;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && (\r\n                <button\r\n                    className=\"butt-right control\"\r\n                    onMouseDown={() => emitter.emit('mouseDown')('butt-right')}\r\n                    onTouchStart={() => emitter.emit('mouseDown')('butt-right')}\r\n                    onMouseUp={() => emitter.emit('mouseUp')('butt-right')}\r\n                    onTouchEnd={() => emitter.emit('mouseUp')('butt-right')}>\r\n                    &#9658;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && (\r\n                <button\r\n                    className=\"butt-front control\"\r\n                    onMouseDown={() => emitter.emit('mouseDown')('butt-front')}\r\n                    onTouchStart={() => emitter.emit('mouseDown')('butt-front')}\r\n                    onMouseUp={() => emitter.emit('mouseUp')('butt-front')}\r\n                    onTouchEnd={() => emitter.emit('mouseUp')('butt-front')}>\r\n                    &#9650;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && props.isShowClickFullScreen && (\r\n                <button\r\n                    className=\"butt-fullscreen control\"\r\n                    onClick={() => {\r\n                        emitter.emit('mouseDown')('butt-fullscreen')\r\n                        clickFullScreen(props.dispatch).clickFullScreen()\r\n                    }}>\r\n                    &#10066;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && !props.isShowInfo && (\r\n                <button\r\n                    className=\"butt-info control\"\r\n                    onClick={() => clickInfo(props.dispatch).clickInfo(true)}>\r\n                    i\r\n                </button>)}\r\n\r\n\r\n\r\n\r\n            {props.isDialog && (\r\n                <div className=\"dialog\">\r\n                    <div className=\"dialog-inner\">\r\n                        <BotAnswers />\r\n                        <UserReplicies />\r\n                    </div>\r\n                </div>)}\r\n\r\n\r\n\r\n            {props.isShowFinalMessage && (\r\n                <div className=\"info\">\r\n                    <div className=\"info-inner final-message\">\r\n                        {/*<button*/}\r\n                            {/*className=\"control butt-infoClose\"*/}\r\n                            {/*onClick={() => showMessages(props.dispatch).toggleFinalMessage(false)}>*/}\r\n                            {/*x*/}\r\n                        {/*</button>*/}\r\n                        <p>{t('To be continued')}</p>\r\n                    </div>\r\n                </div>)}\r\n\r\n\r\n\r\n            {props.isShowInfo && (\r\n                <div className=\"info\">\r\n                    <div className=\"info-inner\">\r\n                        <button\r\n                            className=\"control butt-infoClose\"\r\n                            onClick={() => clickInfo(props.dispatch).clickInfo(false)}>\r\n                            x\r\n                        </button>\r\n                        <p>\r\n                            {`1 ${t('chapter')}: `}\r\n                            <a href=\"http://js.otrisovano.ru/factory/\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                        <p>\r\n                            {`2 ${t('chapter')}: `}\r\n                            <a href=\"http://js.otrisovano.ru/bridge/\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                        <p><br /><br />\r\n                            {t('Author: ')}\r\n                            <a href=\"http://otrisovano.ru\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                        <p>\r\n                            {t('Github: ')}\r\n                            <a href=\"https://github.com/fire888/levels/\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                    </div>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const pr = { dispatch: null }\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","\r\n\r\n\r\nexport function KeyBoard (emitter) {\r\n    const keys = {\r\n        'up': false,\r\n        'left': false,\r\n        'right': false,\r\n        's': false,\r\n        'm': false,\r\n        'w': false,\r\n    }\r\n\r\n\r\n    const keyUpdate = function ( keyCode, isDown ) {\r\n        switch( keyCode ) {\r\n          case 38:\r\n            keys['up'] = isDown\r\n            break\r\n          case 37:\r\n            keys['left'] = isDown\r\n            break\r\n          case 39:\r\n            keys['right'] = isDown\r\n            break\r\n          case 83:\r\n            keys['s'] = isDown\r\n            break\r\n          case 77:\r\n            keys['m'] = isDown\r\n            break\r\n          case 87:\r\n            keys['w'] = isDown\r\n            break\r\n        }\r\n        emitter.emit('keyEvent')(keys)\r\n    }\r\n\r\n\r\n\r\n    document.addEventListener('keydown', event => keyUpdate(event.keyCode, true))\r\n    document.addEventListener('keyup', event => keyUpdate(event.keyCode, false))\r\n\r\n\r\n\r\n    emitter.subscribe('mouseDown')(key => {\r\n        if (key === 'butt-left') keyUpdate(37, true)\r\n        if (key === 'butt-right') keyUpdate(39, true)\r\n        if (key === 'butt-front') keyUpdate(38, true)\r\n    })\r\n    emitter.subscribe('mouseUp')(key => {\r\n        if (key === 'butt-left') keyUpdate(37, false)\r\n        if (key === 'butt-right') keyUpdate(39, false)\r\n        if (key === 'butt-front') keyUpdate(38, false)\r\n    })\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/px.2be78f43.jpg\";","export default __webpack_public_path__ + \"static/media/nx.b2401269.jpg\";","export default __webpack_public_path__ + \"static/media/py.659ebc34.jpg\";","export default __webpack_public_path__ + \"static/media/ny.462f1251.jpg\";","export default __webpack_public_path__ + \"static/media/pz.8ea5ba14.jpg\";","export default __webpack_public_path__ + \"static/media/nz.7f255b96.jpg\";","export default __webpack_public_path__ + \"static/media/posx.be2d83a2.jpg\";","export default __webpack_public_path__ + \"static/media/negx.d016c8e7.jpg\";","export default __webpack_public_path__ + \"static/media/posy.01cfd221.jpg\";","export default __webpack_public_path__ + \"static/media/negy.f01f8356.jpg\";","export default __webpack_public_path__ + \"static/media/posz.ef37b8e1.jpg\";","export default __webpack_public_path__ + \"static/media/negz.f346a80a.jpg\";","export default __webpack_public_path__ + \"static/media/level-rooms.5251ade2.obj\";","export default __webpack_public_path__ + \"static/media/floor_outer_map.35e50f6e.jpg\";","export default __webpack_public_path__ + \"static/media/botMap.972e276e.png\";","import pxjpg from '../assets/skybox/px.jpg'\r\nimport nxjpg from '../assets/skybox/nx.jpg'\r\nimport pyjpg from '../assets/skybox/py.jpg'\r\nimport nyjpg from '../assets/skybox/ny.jpg'\r\nimport pzjpg from '../assets/skybox/pz.jpg'\r\nimport nzjpg from '../assets/skybox/nz.jpg'\r\n\r\nimport pxjpg2 from '../assets/matIronBox/posx.jpg'\r\nimport nxjpg2 from '../assets/matIronBox/negx.jpg'\r\nimport pyjpg2 from '../assets/matIronBox/posy.jpg'\r\nimport nyjpg2 from '../assets/matIronBox/negy.jpg'\r\nimport pzjpg2 from '../assets/matIronBox/posz.jpg'\r\nimport nzjpg2 from '../assets/matIronBox/negz.jpg'\r\n\r\nimport levelRoomsSrc from '../assets/level-rooms.obj'\r\nimport mapFloorOuter from '../assets/floor_outer_map.jpg'\r\n\r\nimport botMap from '../assets/botMap.png'\r\nimport botSrc from '../assets/botAnim2.glb'\r\n\r\nimport m13610 from '../assets/13610.glb'\r\nimport m13611 from '../assets/13611.glb'\r\n\r\n\r\n\r\nexport const ASSETS_TO_LOAD = [\r\n    {\r\n        type: 'obj',\r\n        filename: levelRoomsSrc,\r\n        key: 'level-rooms'\r\n    }, {\r\n        type: 'glb',\r\n        filename: botSrc,\r\n        key: 'bot'\r\n    }, {\r\n        type: 'cubeTextures',\r\n        filename: { px: pxjpg, nx: nxjpg, py: pyjpg, ny: nyjpg, pz: pzjpg, nz: nzjpg, },\r\n        key: 'skyBox'\r\n    }, {\r\n        type: 'cubeTextures',\r\n        filename: { px: pxjpg2, nx: nxjpg2, py: pyjpg2, ny: nyjpg2, pz: pzjpg2, nz: nzjpg2, },\r\n        key: 'ironEnv',\r\n    }, {\r\n        type: 'img',\r\n        filename: botMap,\r\n        key: 'botMap',\r\n    }, {\r\n        type: 'img',\r\n        filename: mapFloorOuter,\r\n        key: 'mapFloorOuter',\r\n        wrap: true,\r\n},\r\n    {\r\n        type: 'glb',\r\n        filename: m13610,\r\n        key: 'm13610'\r\n    },\r\n    {\r\n        type: 'glb',\r\n        filename: m13611,\r\n        key: 'm13611'\r\n    },\r\n\r\n\r\n]\r\n\r\n\r\n\r\n\r\nexport const MATERIALS_CONFIG = {\r\n\r\n    'iron': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x003388,\r\n            specular: 0xffffff,\r\n            shininess: 60,\r\n            bumpMap: 'botMap',\r\n            bumpScale: 0.1,\r\n            envMap: 'ironEnv',\r\n            reflectivity: 0.5,\r\n            map: 'botMap',\r\n            skinning: true,\r\n        },\r\n    },\r\n\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x004466,\r\n            emissive: 0xffffff,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n\r\n    'green': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x004466,\r\n            emissive: 0xffffff,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    },\r\n\r\n    'road': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xa1129f,\r\n            emissive: 0xa1129f,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    } \r\n}\r\n\r\n\r\n\r\n\r\n/** size element */\r\nexport const S = 175.335\r\nexport const H = 70\r\n\r\n\r\n\r\n/** emitter constants */\r\nexport const FRAME_UPDATE = 'FRAME_UPDATE'\r\n\r\n\r\n\r\n\r\nexport const FLOORS_CONF = {\r\n    '-2': {\r\n        'outer': { fogNear: -200, fogFar: 500, color: 0x18257d },\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x8805a8 },\r\n    },\r\n\r\n   \r\n\r\n    '-1': {\r\n        'start': { fogNear: 0, fogFar: 5, color: 0x18257d },\r\n        'outer': { fogNear: 20, fogFar: 500, color: 0x18257d },\r\n        'back': { fogNear: 20, fogFar: 500, color: 0x18257d, backgroundImgKey: 'skyBox' },\r\n        'firstRoomLight': { fogNear: -40, fogFar: 150, color: 0x00235e},\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x2e118b },\r\n    },\r\n\r\n\r\n    '0': { 'default': { fogNear: -40, fogFar: 150, color: 0x3c4900 }, },\r\n\r\n    \r\n    '1': { 'default': { fogNear: -40, fogFar: 150, color: 0x0e3e52 }, },\r\n\r\n\r\n    '2': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a1763 }, },\r\n\r\n\r\n    '3': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a6340 }, },\r\n\r\n\r\n    '4': { 'default': { fogNear: 0, fogFar: 80, color: 0xac0000 }, },\r\n}\r\n\r\n\r\n\r\n\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true\r\n    },\r\n    clearColor: FLOORS_CONF[-1]['outer'].color,\r\n    backgroundColor: FLOORS_CONF[-1]['outer'].color,\r\n    amb: {\r\n        color: FLOORS_CONF[-1]['outer'].color,\r\n        strength: 0.7,\r\n    },\r\n}\r\n\r\n\r\nexport const playerConfig = {\r\n    //speed: 0.35,\r\n    speed: 0.8,\r\n    speedRot: 0.02,\r\n    speedDown: -0.45,\r\n    offsetFromFloor: 10.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    startPos: [100, -60, 1000],\r\n    //startPos: [90, -10, 360.7140705920112], // beginPlay\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    lightDataOne: {\r\n        //color: 0xc2d4f3,\r\n        color: 0xffffff,\r\n        strength: 5000,\r\n        pos: [0, 50, 5],\r\n    },\r\n    // lightDataTwo: {\r\n    //     color: 0xff0000,\r\n    //     strength: 0.2,\r\n    //     pos: [0, -30, 40],\r\n    // },\r\n}\r\n","export default __webpack_public_path__ + \"static/media/botAnim2.47b6030d.glb\";","export default __webpack_public_path__ + \"static/media/13610.ab841ac9.glb\";","export default __webpack_public_path__ + \"static/media/13611.f5ed0462.glb\";","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\nlet callback = null\r\nlet dataToLoad = null\r\nconst assets = {}\r\nlet objLoader, textureLoader, gltfLoader, cubeTextureLoader\r\nlet index = 0\r\n\r\n\r\n\r\nconst loadAsset = function (data) {\r\n    if (data.type === 'obj') {\r\n        objLoader.load(data.filename, model => {\r\n            assets[data.key] = model\r\n            checkComplete()        \r\n        })\r\n    }\r\n    if (data.type === 'glb' || data.type === 'gltf') {\r\n        gltfLoader.load(data.filename, model => {\r\n            assets[data.key] = model\r\n            checkComplete()        \r\n        })\r\n    }        \r\n    if (data.type === 'img') {\r\n        textureLoader.load(data.filename, model => {\r\n            assets[data.key] = model\r\n            checkComplete()        \r\n        })\r\n    }\r\n    if (data.type === 'cubeTextures') {\r\n        cubeTextureLoader.load(\r\n            [\r\n                data.filename['px'],\r\n                data.filename['nx'],\r\n                data.filename['py'],\r\n                data.filename['ny'],\r\n                data.filename['pz'],\r\n                data.filename['nz'],\r\n            ],\r\n            result => {\r\n                assets[data.key] = result\r\n                checkComplete()\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst checkComplete = () => {\r\n    index ++\r\n    index < dataToLoad.length \r\n        ? loadAsset(dataToLoad[index])\r\n        : callback(assets)\r\n}\r\n\r\n\r\n\r\nexport const loadAssets = data => {\r\n    return new Promise(resolve => {\r\n        dataToLoad = data\r\n        callback = resolve\r\n        index = 0\r\n\r\n        objLoader = objLoader || new OBJLoader()\r\n        textureLoader = textureLoader || new THREE.TextureLoader()\r\n        gltfLoader = gltfLoader || new GLTFLoader()\r\n        cubeTextureLoader = cubeTextureLoader || new THREE.CubeTextureLoader()\r\n\r\n        loadAsset(dataToLoad[index])\r\n    })\r\n}\r\n\r\n","import { emitter } from '../helpers/util_emitter'\r\nimport { S, H } from '../constants/constants_elements'\r\nimport { pr } from '../componentsReact/App'\r\n\r\n\r\nexport const START_LAYER_STATE = 'outer'\r\n\r\n\r\n\r\n\r\n\r\nexport const CHANGE_LAYER_STATE = [\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'outer', newState: 'corridor',\r\n        oldQuadrant: [0, -2, 4], newQuadrant: [0, -2, 3],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'corridorLight',\r\n                backgroundImg: false\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'corridor', newState: 'outer',\r\n        oldQuadrant: [0, -2, 3], newQuadrant: [0, -2, 4],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'outer',\r\n            },\r\n        ]\r\n    },\r\n\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'corridor', newState: 'firstRoom',\r\n        oldQuadrant: [0, -1, 2], newQuadrant: [0, -1, 1],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'firstRoomLight',\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'corridor',\r\n        oldQuadrant: [0, -1, 1], newQuadrant: [0, -1, 2],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'corridorLight',\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: [0, -1, 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_MINUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                emitKey: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_PLUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                emitKey: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_PLUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: () => 0,\r\n            },\r\n        ],\r\n    },\r\n\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_MINUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: () => 100,\r\n            },\r\n        ],\r\n    },\r\n\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            },\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_MINUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_PLUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_PLUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n\r\n    /** **********************************************************/\r\n\r\n    // {\r\n    //     oldState: 'addWell', newState: 'addWell',\r\n    //     oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_MINUS_ONE', 'ANY'],\r\n    //     emitData: [\r\n    //         {\r\n    //             emitKey: 'CHANGE_QUADRANT',\r\n    //             counter: val => ++val,\r\n    //         }\r\n    //     ],\r\n    // },\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createActionByChangedQuadrant = () => {\r\n    const checkerNewQuadrant = createCheckerNewQuadrant()\r\n\r\n\r\n    emitter.subscribe('playerMove')(pos => {\r\n        const data = checkerNewQuadrant.update(pos)\r\n        const { currentQuadrant, oldQuadrant, isChanged } = data\r\n\r\n        if (!isChanged) return;\r\n\r\n        const arrEmitData = getEmitsByChangeQuadrant(oldQuadrant, currentQuadrant)\r\n\r\n        arrEmitData.length && arrEmitData.forEach(item => pr.dispatch({\r\n            ...item,\r\n            type: item.emitKey,\r\n        }))\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet levelState = START_LAYER_STATE\r\n\r\n\r\nexport const getEmitsByChangeQuadrant = (playerOldQ, playerNewQ) => {\r\n    for (let i = 0; i < CHANGE_LAYER_STATE.length; ++i) {\r\n        const data = getData(\r\n            [...playerOldQ],\r\n            [...playerNewQ],\r\n            {\r\n                ...CHANGE_LAYER_STATE[i],\r\n                oldQuadrant: [...CHANGE_LAYER_STATE[i].oldQuadrant],\r\n                newQuadrant: [...CHANGE_LAYER_STATE[i].newQuadrant],\r\n            }\r\n        )\r\n        if (data) return data;\r\n    }\r\n    return { levelState }\r\n}\r\n\r\n\r\n\r\n\r\nconst getData = (playerOldQ, playerNewQ, conf) => {\r\n    const { oldState, newState, oldQuadrant, newQuadrant, emitData } = conf\r\n\r\n    if (levelState !== oldState)\r\n        return;\r\n\r\n\r\n    if (oldQuadrant[0] === 'ANY') oldQuadrant[0] = playerOldQ[0]\r\n    if (oldQuadrant[1] === 'ANY') oldQuadrant[1] = playerOldQ[1]\r\n    if (oldQuadrant[2] === 'ANY') oldQuadrant[2] = playerOldQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY') newQuadrant[0] = playerNewQ[0]\r\n    if (newQuadrant[1] === 'ANY') newQuadrant[1] = playerNewQ[1]\r\n    if (newQuadrant[2] === 'ANY') newQuadrant[2] = playerNewQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY_PLUS_ONE') newQuadrant[0] = playerOldQ[0] + 1\r\n    if (newQuadrant[1] === 'ANY_PLUS_ONE') newQuadrant[1] = playerOldQ[1] + 1\r\n    if (newQuadrant[2] === 'ANY_PLUS_ONE') newQuadrant[2] = playerOldQ[2] + 1\r\n\r\n    if (newQuadrant[0] === 'ANY_MINUS_ONE') newQuadrant[0] = playerOldQ[0] - 1\r\n    if (newQuadrant[1] === 'ANY_MINUS_ONE') newQuadrant[1] = playerOldQ[1] - 1\r\n    if (newQuadrant[2] === 'ANY_MINUS_ONE') newQuadrant[2] = playerOldQ[2] - 1\r\n\r\n\r\n    if (\r\n        oldQuadrant[0] !== playerOldQ[0] ||\r\n        oldQuadrant[1] !== playerOldQ[1] ||\r\n        oldQuadrant[2] !== playerOldQ[2] ||\r\n        newQuadrant[0] !== playerNewQ[0] ||\r\n        newQuadrant[1] !== playerNewQ[1] ||\r\n        newQuadrant[2] !== playerNewQ[2]\r\n    ) return;\r\n\r\n\r\n    levelState = newState\r\n\r\n    return emitData.map(item => ({\r\n        ...item,\r\n        levelState,\r\n        oldQuadrant: [...oldQuadrant],\r\n        newQuadrant: [...newQuadrant],\r\n    }))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst createCheckerNewQuadrant = function () {\r\n    let oldQuadrant = []\r\n\r\n    return {\r\n        update ({ x, y, z}) {\r\n            const currentQuadrant = [Math.floor(x / S), Math.floor(y / H), Math.floor(z / S)]\r\n\r\n            if (\r\n                currentQuadrant[0] !== oldQuadrant[0] ||\r\n                currentQuadrant[1] !== oldQuadrant[1] ||\r\n                currentQuadrant[2] !== oldQuadrant[2]\r\n            ) {\r\n                const data = {\r\n                    isChanged: true,\r\n                    currentQuadrant,\r\n                    oldQuadrant,\r\n                }\r\n                oldQuadrant = [...currentQuadrant]\r\n\r\n                return data\r\n            } else {\r\n                return { isChanged: false }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import { MATERIALS_CONFIG } from '../constants/constants_elements'\r\nimport * as THREE from 'three'\r\n\r\n\r\n\r\nexport function prepareMeshesFromAssets (assets) {\r\n    const\r\n        materials = createMaterials(assets),\r\n        rooms = {},\r\n        allMeshes = {}\r\n\r\n    assets.collisionsBotsRooms = {}\r\n\r\n    assets['level-rooms'].traverse(child => {\r\n        if (child.name.includes(\"room_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            rooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"collision_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry)\r\n            assets.collisionsBotsRooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_walls\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_road\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.green)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_floor\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.road)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }  \r\n    })\r\n\r\n    return {\r\n        rooms,\r\n        allMeshes,\r\n        materials,\r\n    }\r\n}\r\n\r\n\r\n\r\nconst createMaterials = assets => {\r\n    for (let key in assets) \r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map', 'normalMap', 'lightMap', 'aoMap']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}\r\n","// import saturateVert from './saturate.vert'\r\n// import saturateFrag from './saturate.frag'\r\n\r\n\r\nexport const Saturate = {\r\n    uniforms: {\r\n        \"tDiffuse\": { value: null },\r\n    },\r\n\r\n    //vertexShader: saturateVert,\r\n    //fragmentShader: saturateFrag,\r\n\r\n\r\n\r\n    vertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n    fragmentShader: `\r\n\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n    vec4 texel = texture2D( tDiffuse, vUv );\r\n    gl_FragColor = (texel * texel * texel) * vec4(3.);\r\n\r\n}`,\r\n}\r\n","import * as THREE from 'three'\r\n\r\n\r\n\r\nlet FLOORS_ARRAY = []\r\n\r\n\r\n\r\nexport const createComponentCollisionFloors = (objFromLink, offset, delta, speed) => {\r\n    const objFrom = objFromLink\r\n    const offsetFromFloor = offset\r\n    const offsetFromFloorFactor = delta\r\n    const speedDown = speed\r\n\r\n    const vec3Src = new THREE.Vector3()\r\n    const vec3Ray = new THREE.Vector3(0, -1, 0)\r\n\r\n    let isDisable = true\r\n    \r\n    const raycasterDown = new THREE.Raycaster(vec3Src, vec3Ray)\r\n\r\n    return {\r\n        check: updateData => {\r\n            if (isDisable) return;\r\n\r\n            vec3Src.copy(objFrom.position)\r\n            const intersectsFloor = raycasterDown.intersectObjects(FLOORS_ARRAY)\r\n            if (intersectsFloor && intersectsFloor[0] && intersectsFloor[0].distance > offsetFromFloor + offsetFromFloorFactor) {\r\n                objFrom.position.y += speedDown * updateData.count\r\n                return;\r\n            }\r\n            if (intersectsFloor && !intersectsFloor[0]) {\r\n                objFrom.position.y += speedDown * updateData.count\r\n                return;\r\n            } \r\n            objFrom.position.y = intersectsFloor[0].point.y + offsetFromFloor\r\n        },\r\n        start: () => {\r\n            isDisable = false\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const setItemToFloorsCollision = item => FLOORS_ARRAY.push(item)\r\nexport const removeItemFromFloorsCollision = item => FLOORS_ARRAY = FLOORS_ARRAY.filter(mesh => mesh !== item) \r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\n\r\nlet WALLS_ARRAY = []\r\n\r\n\r\n\r\nexport const createComponentCollisionWalls = (objFromLink, objToLink, offset) => {\r\n    const offsetWallCollision = offset\r\n    const objFrom = objFromLink\r\n    const objTo = objToLink\r\n\r\n    const vec3Src2 = new THREE.Vector3()\r\n    const vec3Ray2 = new THREE.Vector3()\r\n\r\n    const raycasterWalls = new THREE.Raycaster(vec3Src2, vec3Ray2)\r\n    \r\n    return {\r\n        check: () => {\r\n            objTo.getWorldPosition(vec3Ray2)\r\n            vec3Src2.copy(objFrom.position)\r\n            vec3Ray2.sub(vec3Src2)\r\n\r\n            \r\n            const intersectsWalls = raycasterWalls.intersectObjects(WALLS_ARRAY)\r\n\r\n            return intersectsWalls[0] && intersectsWalls[0].distance < offsetWallCollision\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const setItemToWallCollision = item => WALLS_ARRAY.push(item)\r\nexport const removeItemFromWallCollision = item => WALLS_ARRAY = WALLS_ARRAY.filter(mesh => item !== mesh)\r\n","\r\n\r\nlet arrItems = []\r\n\r\n\r\n\r\nexport const addItemToNearChecker = item => arrItems.push(item)\r\n\r\n\r\n\r\nexport const removeItemByName = name => arrItems = arrItems.filter(item => item.name !== name)\r\n\r\n\r\n\r\nexport const createCheckerNearItem = (mesh, emitter) => () => {\r\n    arrItems.forEach(item => {\r\n        if (mesh.position.distanceTo(item.position) < 10 && !item.userData.nearPlayer) {\r\n            item.userData.nearPlayer = true\r\n            emitter.emit('nearMesh')({ toNear: true, mesh: item })\r\n        }\r\n        if (mesh.position.distanceTo(item.position) >= 10 && item.userData.nearPlayer) {\r\n            item.userData.nearPlayer = false\r\n            emitter.emit('nearMesh')({ toNear: false, mesh: item })\r\n        }\r\n    })\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\nimport { playerConfig } from '../constants/constants_elements'\r\n\r\nimport { createComponentCollisionFloors } from '../components/component_collisionFloor'\r\nimport { createComponentCollisionWalls } from '../components/component_collisionWalls'\r\nimport { createCheckerNearItem } from '../components/component_checkNearItem'\r\n\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\nimport { showMessages, startPlay } from '../store/actions'\r\nimport { pr } from '../componentsReact/App'\r\nimport {construct} from \"ramda\";\r\n\r\n\r\n\r\nexport function createPlayer (emitterLink) {\r\n    const emitter = emitterLink\r\n\r\n    const {\r\n        startPos,\r\n        startRot,\r\n        cameraData,\r\n        frontObjPos,\r\n        lightDataOne,\r\n        speed,\r\n        offsetFromFloor,\r\n        offsetFromFloorFactor,\r\n        speedDown,\r\n        offsetWallCollision,\r\n        speedRot,\r\n    } = playerConfig\r\n\r\n\r\n    let camera\r\n    let keys = {}\r\n    let isButtonsDisabled = false\r\n    let isBlocked = true\r\n\r\n    const mainObj = new THREE.Object3D()\r\n    mainObj.position.fromArray(startPos)\r\n    mainObj.rotation.fromArray(startRot)\r\n\r\n    const frontObj = new THREE.Object3D()\r\n    frontObj.position.fromArray(frontObjPos)\r\n    mainObj.add(frontObj)\r\n  \r\n    {\r\n        const { fov, ratio, near, far, pos } = cameraData\r\n        camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n        camera.position.fromArray(pos)\r\n        mainObj.add(camera)\r\n    }\r\n\r\n    {\r\n        const { color, strenth, pos } = lightDataOne\r\n        const light = new THREE.PointLight(color, strenth)\r\n        light.position.fromArray(pos)\r\n        mainObj.add(light)\r\n    }\r\n\r\n\r\n    const checkFloors = createComponentCollisionFloors(mainObj, offsetFromFloor, offsetFromFloorFactor, speedDown)\r\n    const checkWalls = createComponentCollisionWalls(mainObj, frontObj, offsetWallCollision)\r\n    const checkNearItem = createCheckerNearItem(mainObj, emitter)\r\n\r\n    let oldY = mainObj.position.y\r\n    let countDropped = 0\r\n    let isGameComplete = false\r\n\r\n    const arrMachines = [\r\n        new THREE.Vector3(65, -86.097900390625, 893.5679999999998),\r\n        new THREE.Vector3(120, -86.097900390625, 880.5679999999998),\r\n    ]\r\n    const pPos = new THREE.Vector3()\r\n\r\n    const update = data => {\r\n        if (isButtonsDisabled) return;\r\n        if (isBlocked) return;\r\n\r\n        checkFloors.check(data)\r\n\r\n        if (!keys) return;\r\n\r\n        if (keys['up']) {\r\n            if (checkWalls.check()) return;\r\n            for (let i = 0; i < arrMachines.length; ++i) {\r\n                if (frontObj.getWorldPosition(pPos).distanceTo(arrMachines[i]) < 20) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n\r\n            mainObj.translateZ(-speed * data.count)\r\n            //console.log(mainObj.position.x,  mainObj.position.y, mainObj.position.z)\r\n            checkNearItem()\r\n            emitter.emit('playerMove')(mainObj.position)\r\n        }\r\n        keys['left'] && (mainObj.rotation.y += (speedRot * data.count))\r\n        keys['right'] && (mainObj.rotation.y -= (speedRot * data.count))\r\n\r\n\r\n        if (oldY > mainObj.position.y) {\r\n            ++countDropped\r\n        } else {\r\n            countDropped = 0\r\n        }\r\n        oldY = mainObj.position.y\r\n\r\n        if (countDropped > 800 && !isGameComplete) {\r\n            isGameComplete = true\r\n            setTimeout(() => {\r\n                startPlay(pr.dispatch).startFinalFog()\r\n                setTimeout(() => {\r\n                    showMessages(pr.dispatch).toggleFinalMessage(true)\r\n                }, 6000)\r\n            }, 10000)\r\n        }\r\n    }\r\n\r\n\r\n    emitter.subscribe('keyEvent')(data => keys = data)\r\n    emitter.subscribe(FRAME_UPDATE)(update)\r\n    emitter.subscribe('toggleDialog')(val => isButtonsDisabled = val.isOpen)\r\n\r\n\r\n    return {\r\n        start: () => { \r\n            isBlocked = false\r\n            checkFloors.start()\r\n        },\r\n        getObj: () => mainObj,\r\n        getCamera: () => camera,\r\n        setToPos: (x, y, z) => mainObj.position.set(x, y, z)\r\n    }\r\n}\r\n\r\n","import '../stylesheets/style.css'\r\n\r\n\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n      if (!isAnimateLoader) return;\r\n\r\n      setTimeout(() => {\r\n            offsetLoader ++;\r\n            offsetLoader === 0 && (offsetLoader -= 100)\r\n            loader.style.marginLeft = offsetLoader + '%'\r\n            loaderTimeOut()\r\n      }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport const showStartButton = emitter => {\r\n    const startButtons = document.querySelector('.startbuttons-wrapper')\r\n    const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n    const hideStartScreen = e => {\r\n        emitter.emit('setLanguage')(e.target.dataset.lang)\r\n        document.querySelector('.start-screen').style.display = 'none'\r\n    }\r\n\r\n    isAnimateLoader = false\r\n    startButtons.style.display = 'flex'\r\n    startButtons.addEventListener('click', hideStartScreen)\r\n    progressWrapper.style.display = 'none'\r\n}\r\n\r\n","import {\r\n    setItemToFloorsCollision,\r\n    removeItemFromFloorsCollision, \r\n} from '../components/component_collisionFloor'\r\nimport {\r\n    setItemToWallCollision,\r\n    removeItemFromWallCollision,\r\n} from '../components/component_collisionWalls'\r\nimport * as THREE from 'three'\r\nimport { S, H } from '../constants/constants_elements'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst STANDART_ROOMS = ['room_02', 'room_03', 'room_04', 'room_05']\r\nconst START_ROOMS = ['outer_walls', 'outer_floor', 'outer_road']\r\n\r\n\r\n\r\n\r\n\r\nexport function createLevel (emitter, rooms, allMeshes, store) {\r\n    const group = new THREE.Group()\r\n    const objRooms = {}\r\n\r\n\r\n    //let isCanAddStairs = false\r\n    let state = 'normal' // 'addBot' || 'addStairs' || 'addWell'\r\n\r\n\r\n    const createRoom = (kv, key) => {\r\n        const instanceKey = key || STANDART_ROOMS[Math.floor(Math.random() * STANDART_ROOMS.length)]\r\n        \r\n        const objKey = `r_${kv[0]}_${kv[1]}_${kv[2]}` \r\n\r\n        const mesh = rooms[instanceKey].clone()\r\n        mesh.position.set(kv[0] * S, kv[1] * H, kv[2] * S)\r\n        setItemToFloorsCollision(mesh)\r\n        setItemToWallCollision(mesh)\r\n        group.add(mesh)\r\n        objRooms[objKey] = mesh\r\n\r\n\r\n        emitter.emit('levelChanged')({\r\n            typeLevelChange: 'createRoom',\r\n            instanceKey,\r\n            objKey,\r\n            kv,\r\n            isAddBot: instanceKey === 'room_01'\r\n        })    \r\n\r\n        instanceKey === 'room_06' && createRoom([kv[0], kv[1] + 1, kv[2]], 'room_dummy')\r\n    }\r\n\r\n\r\n    const removeRoom = kv => {\r\n        const objKey = `r_${ kv[0] }_${ kv[1] }_${ kv[2] }`\r\n        if (!objRooms[objKey]) return;\r\n\r\n    \r\n        const instanceKey = objRooms[objKey].name\r\n\r\n        // objRooms[objKey].children[0].geometry.dispose()\r\n        // objRooms[objKey].children[0].material.dispose()\r\n        group.remove(objRooms[objKey])\r\n        removeItemFromFloorsCollision(objRooms[objKey])\r\n        removeItemFromWallCollision(objRooms[objKey])\r\n        delete objRooms[objKey]\r\n\r\n\r\n        emitter.emit('levelChanged')({\r\n            typeLevelChange: 'destroyRoom',\r\n            instanceKey,\r\n            objKey,\r\n            kv,\r\n            isRemoveBot: instanceKey === 'room_01'\r\n        })    \r\n\r\n        instanceKey === 'room_dummy' && removeRoom([kv[0], kv[1] - 1, kv[2]])\r\n        instanceKey === 'room_06' && removeRoom([kv[0], kv[1] + 1, kv[2]])\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    createRoom([0, -1, 0], 'room_02')\r\n    createRoom([0, -1, -1], 'room_02')\r\n    createRoom([-1, -1, 0], 'room_02')\r\n    createRoom([1, -1, 0], 'room_02')\r\n\r\n\r\n\r\n    /** add remove start corridors */\r\n    const startL = {}\r\n    for (let i = 0; i < START_ROOMS.length; ++i) {\r\n        const l = allMeshes[START_ROOMS[i]].clone()\r\n        setItemToFloorsCollision(l)\r\n        setItemToWallCollision(l)\r\n        group.add(l)\r\n        l.position.set(0, -1 * H, 0)\r\n        startL[START_ROOMS[i]] = l\r\n    }\r\n\r\n\r\n\r\n\r\n    let wentLevels = 0\r\n    let flagIsSpecial = false\r\n\r\n    const initState = store.getState()\r\n    let saveOldQuadrant = initState.app.playerQuadrant.oldQuadrant\r\n    let saveNewQuadrant = initState.app.playerQuadrant.newQuadrant\r\n    let saveIsStartCorridorShow = initState.app.level.isStartCorridorShow\r\n\r\n\r\n\r\n\r\n\r\n    store.subscribe(() => {\r\n        const newState = store.getState()\r\n\r\n        if (saveIsStartCorridorShow && saveIsStartCorridorShow !== newState.app.level.isStartCorridorShow) {\r\n            saveIsStartCorridorShow = false\r\n            for (let key in startL) {\r\n                removeItemFromFloorsCollision(startL[key])\r\n                removeItemFromWallCollision(startL[key])\r\n                group.remove(startL[key])\r\n            }\r\n        }\r\n\r\n\r\n        const { type, oldQuadrant, newQuadrant, counter } = newState.app.playerQuadrant\r\n\r\n\r\n        if ( type !== 'CHANGE_QUADRANT' ) return;\r\n\r\n\r\n        if (\r\n            saveOldQuadrant[0] !== oldQuadrant[0] ||\r\n            saveOldQuadrant[1] !== oldQuadrant[1] ||\r\n            saveOldQuadrant[2] !== oldQuadrant[2] ||\r\n            saveNewQuadrant[0] !== newQuadrant[0] ||\r\n            saveNewQuadrant[1] !== newQuadrant[1] ||\r\n            saveNewQuadrant[2] !== newQuadrant[2]\r\n        ) {\r\n            saveOldQuadrant = [...oldQuadrant]\r\n            saveNewQuadrant = [...newQuadrant]\r\n        } else {\r\n            return;\r\n        }\r\n\r\n\r\n        //let keyCreateRoom = false\r\n        let keyCreateRoom = STANDART_ROOMS[Math.floor(Math.random() * STANDART_ROOMS.length)]\r\n        if (counter) {\r\n            wentLevels = counter(wentLevels)\r\n\r\n            if (flagIsSpecial) {\r\n                flagIsSpecial = false\r\n            } else {\r\n                if (wentLevels < 3) {\r\n                    state = 'normal'\r\n                } else if (wentLevels < 100) {\r\n                    if (state === 'normal') {\r\n                        state = 'addBot'\r\n                    }\r\n                } else {\r\n                    state = 'addStairs'\r\n                }\r\n\r\n\r\n                if (state === 'addBot') {\r\n                    keyCreateRoom = 'room_01'\r\n                    flagIsSpecial = true\r\n                }\r\n                if (state === 'addStairs') {\r\n                    keyCreateRoom = 'room_06'\r\n                    flagIsSpecial = true\r\n                }\r\n                if (state === 'addWell') {\r\n                    keyCreateRoom = 'room_07'\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        emitter.subscribe('changeLevelMode')(newMode => state = newMode)\r\n\r\n\r\n        const oldKv = oldQuadrant, curKv = newQuadrant\r\n        // move west\r\n        if (curKv[0] < oldKv[0]) {\r\n            console.log('----------- west')\r\n            // remove east\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n\r\n            // set center to east\r\n            objRooms[`r_${curKv[0] + 1}_${curKv[1]}_${curKv[2]}`] = objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n            // create west\r\n            createRoom([oldKv[0] - 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n            // create north\r\n            createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n            // create soush\r\n            createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n        }\r\n\r\n        // move east\r\n        if (curKv[0] > oldKv[0]) {\r\n            console.log('----------- east')\r\n            // remove west\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n\r\n            // set center to east\r\n            objRooms[`r_${curKv[0] - 1}_${curKv[1]}_${curKv[2]}`] = objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n            // create east\r\n            createRoom([oldKv[0] + 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n            // create north\r\n            createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n            // create south\r\n            createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n        }\r\n\r\n\r\n        // move north\r\n        if (curKv[2] < oldKv[2]) {\r\n            console.log('-----------north')\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n\r\n            // set center to south\r\n            objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] + 1 }`] = objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n            // create north\r\n            createRoom([oldKv[0], oldKv[1], oldKv[2] - 2], keyCreateRoom)\r\n\r\n            // remove west\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n            // create west\r\n            createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n            // remove east\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n            // create east\r\n            createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n        }\r\n\r\n\r\n        // move south\r\n        if (curKv[2] > oldKv[2]) {\r\n            console.log('-----------south')\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n\r\n            // set center to north\r\n            objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] - 1 }`] = objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n            // create south\r\n            createRoom([oldKv[0], oldKv[1], oldKv[2] + 2], keyCreateRoom)\r\n\r\n            // remove west\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n            // create west\r\n            createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n            // remove east\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n            // create east\r\n            createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n        }\r\n\r\n        // move top\r\n        if (curKv[1] > oldKv[1] || curKv[1] < oldKv[1]) {\r\n            console.log('-----------top')\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n            // create north\r\n            createRoom([curKv[0], curKv[1], curKv[2] - 1])\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n            // create south\r\n            createRoom([curKv[0], curKv[1], curKv[2] + 1])\r\n            // remove left\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n            // create left\r\n            createRoom([curKv[0] - 1, curKv[1], curKv[2]])\r\n            // remove right\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n            // create right\r\n            createRoom([curKv[0] + 1, curKv[1], curKv[2]])\r\n        }\r\n\r\n    })\r\n\r\n    return { group }\r\n}\r\n\r\n\r\n\r\n// const geometry = mesh.geometry\r\n// const wireframe = new THREE.WireframeGeometry( geometry );\r\n// const line = new THREE.LineSegments( wireframe );\r\n// line.material.color = { r: 0.5, g: 0.5, b: 0.5}\r\n// line.material.linewidth = 50\r\n// line.material.opacity = 0.5;\r\n// line.material.transparent = true;\r\n// mesh.add( line );","import * as THREE from 'three'\r\nimport { GLTFCopy } from '../helpers/util_GLTFcopy'\r\n\r\n\r\nconst OFFSETS = {\r\n    'room_01': { x: 55, z: 75}\r\n}\r\n\r\nexport class Bot {\r\n    constructor () {\r\n        this.inScene = false\r\n\r\n        this._state = 'go' // || 'rotate' || 'say'\r\n\r\n        this._targetAngle = null\r\n\r\n\r\n        this.container = new THREE.Group()\r\n\r\n        this._modelGroup = new THREE.Group()\r\n        this._modelGroup.position.x = OFFSETS['room_01'].x\r\n        this._modelGroup.position.z = OFFSETS['room_01'].z\r\n        this._modelGroup.rotation.y = Math.random() * (2 * Math.PI)\r\n        this.container.add(this._modelGroup)\r\n\r\n        this._objFrom = new THREE.Object3D()\r\n        this._modelGroup.add(this._objFrom)\r\n\r\n\r\n        this._objTo = new THREE.Object3D()\r\n        this._objTo.position.set(0, 0, 1)\r\n        this._modelGroup.add(this._objTo)\r\n\r\n\r\n        const copy = GLTFCopy(Bot.botScene)\r\n        this.model = copy.scene.children[0]\r\n        this.model.children[1].material = Bot.botMaterial\r\n        this._animations = Bot.botScene.animations\r\n        this._mixer = new THREE.AnimationMixer(this.model.children[1])\r\n        this._walkAction = this._mixer.clipAction(this._animations[1])\r\n        this._walkAction.play()\r\n        this._walkAction.timeScale = .7\r\n\r\n        this._speakAction = this._mixer.clipAction(this._animations[0])\r\n        this._speakAction.timeScale = .4\r\n\r\n        this._modelGroup.add(this.model)\r\n    }\r\n\r\n\r\n    update (data) {\r\n        this._mixer.update(data.delta)\r\n\r\n        if (!this._componentCollision) return;\r\n\r\n        this._updateState()\r\n    }\r\n\r\n\r\n    setCollisionMesh (mesh) {\r\n        this._collisionMeshes = [mesh]\r\n        this.container.add(mesh)\r\n        mesh.material.visible = false\r\n\r\n\r\n        this._componentCollision = createComponentCollisionWalls(this._objFrom, this._objTo, 7, this._collisionMeshes)\r\n    }\r\n\r\n    removeCollisionMesh () {\r\n        this._collisionMeshes = null\r\n        this._componentCollision = null\r\n    }\r\n\r\n\r\n    prepareToSay (pos) {\r\n        this._state = 'say'\r\n        this._walkAction.stop()\r\n        this._speakAction.play()\r\n        this._modelGroup.lookAt(pos.x, this.container.position.y, pos.z)\r\n    }\r\n\r\n\r\n    /** internal *****************************/\r\n\r\n    _updateState () {\r\n        if (this._state === 'go') {\r\n            const isNear = this._componentCollision.check()\r\n            if (!isNear) {\r\n                this._modelGroup.translateZ(0.05)\r\n            } else {\r\n                this._startRotate()\r\n            }\r\n        }\r\n\r\n        if (this._state === 'rotate') {\r\n            this._modelGroup.rotation.y += ((this._targetAngle - this._modelGroup.rotation.y) < 0) ? -.01 : .01\r\n            this._modelGroup.rotation.y %= 2 * Math.PI\r\n            const isComplete = Math.abs(this._modelGroup.rotation.y - this._targetAngle) < .5\r\n            isComplete && this._startGo()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    _startGo () {\r\n        this._state = 'go'\r\n        this._walkAction.play()\r\n        this._speakAction.stop()\r\n    }\r\n\r\n\r\n    _startRotate() {\r\n        this._state = 'rotate'\r\n        this._targetAngle = (this._modelGroup.rotation.y + 1.5 + Math.random() * 4) % (2 * Math.PI)\r\n    }\r\n}\r\n\r\nBot.botScene = null\r\nBot.botMaterial = null\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createComponentCollisionWalls = (objFrom, objTo, offset, arrWalls) => {\r\n    const vec3Src2 = new THREE.Vector3()\r\n    const vec3Ray2 = new THREE.Vector3()\r\n\r\n    return {\r\n        check: () => {\r\n            objTo.getWorldPosition(vec3Ray2)\r\n            objFrom.getWorldPosition(vec3Src2)\r\n            vec3Ray2.sub(vec3Src2)\r\n\r\n            const raycasterWalls = new THREE.Raycaster(vec3Src2, vec3Ray2, 0, 20)\r\n            const intersectsWalls = raycasterWalls.intersectObject(arrWalls[0], true)\r\n\r\n            return !!intersectsWalls[0]\r\n        }\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\nexport const GLTFCopy = gltf => {\r\n    const clone = {\r\n          animations: gltf.animations,\r\n          scene: gltf.scene.clone(true)\r\n    };\r\n  \r\n    const skinnedMeshes = {};\r\n  \r\n    gltf.scene.traverse(node => {\r\n        if (node.isSkinnedMesh) {\r\n            skinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    const cloneBones = {};\r\n    const cloneSkinnedMeshes = {};\r\n  \r\n    clone.scene.traverse(node => {\r\n        if (node.isBone) {\r\n            cloneBones[node.name] = node;\r\n        }\r\n  \r\n        if (node.isSkinnedMesh) {\r\n            cloneSkinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    for (let name in skinnedMeshes) {\r\n        const skinnedMesh = skinnedMeshes[name];\r\n        const skeleton = skinnedMesh.skeleton;\r\n        const cloneSkinnedMesh = cloneSkinnedMeshes[name];\r\n  \r\n        const orderedCloneBones = [];\r\n  \r\n        for (let i = 0; i < skeleton.bones.length; ++i) {\r\n            const cloneBone = cloneBones[skeleton.bones[i].name];\r\n            orderedCloneBones.push(cloneBone);\r\n        }\r\n  \r\n        cloneSkinnedMesh.bind(\r\n            new THREE.Skeleton(orderedCloneBones, skeleton.boneInverses),\r\n            cloneSkinnedMesh.matrixWorld);\r\n    }\r\n  \r\n    return clone;\r\n}","import * as THREE from 'three'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\nimport { Bot } from '../entities/Bot'\r\nimport { pr } from '../componentsReact/App'\r\nimport { toggleDialog } from '../store/actions'\r\n\r\n\r\nconst S = 175.335\r\nconst H = 70\r\nconst H_BOT = 14\r\n\r\n\r\n\r\n\r\nexport const createSystemBots = (assets, materials, emitter, store) => {\r\n    Bot.botMaterial = materials.iron\r\n    Bot.botScene = assets.bot\r\n\r\n\r\n\r\n    const groupBots = new THREE.Group()\r\n    const arrBots = []\r\n\r\n\r\n\r\n    for (let i = 0; i < 5; ++i) {\r\n        const bot = new Bot()\r\n        groupBots.add(bot.container)\r\n        bot.container.position.set(-30 + i * 30, -92, 750)\r\n        bot.inScene = 'aaa'\r\n        bot.setCollisionMesh(assets.collisionsBotsRooms['collision_r_01'].clone())\r\n        arrBots.push(bot)\r\n    }\r\n\r\n\r\n\r\n\r\n    emitter.subscribe(FRAME_UPDATE)(data => {\r\n        for (let i = 0; i < arrBots.length; ++i) arrBots[i].inScene && arrBots[i].update(data)\r\n    })\r\n\r\n\r\n\r\n\r\n    const initState = store.getState()\r\n    let saveIsStartCorridorShow = initState.app.level.isStartCorridorShow\r\n\r\n    store.subscribe(() => {\r\n        const newState = store.getState()\r\n        if (saveIsStartCorridorShow && saveIsStartCorridorShow !== newState.app.level.isStartCorridorShow) {\r\n            saveIsStartCorridorShow = newState.app.level.isStartCorridorShow\r\n\r\n            for (let i = 0; i < arrBots.length; ++i) {\r\n                arrBots[i].inScene = null\r\n                arrBots[i].container.position.y = -10000\r\n                arrBots[i].removeCollisionMesh()\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    emitter.subscribe('levelChanged')(({ typeLevelChange, instanceKey, objKey, kv, isAddBot, isRemoveBot }) => {\r\n        if (isAddBot) {\r\n            for (let i = 0; i < arrBots.length; ++i) {\r\n                if (!arrBots[i].inScene) {\r\n                    arrBots[i].inScene = objKey\r\n                    arrBots[i].container.position.set(kv[0] * S, kv[1] * H + H_BOT, kv[2] * S)\r\n                    arrBots[i].setCollisionMesh(assets.collisionsBotsRooms['collision_r_01'].clone())\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (isRemoveBot) {\r\n            for (let i = 0; i < arrBots.length; ++i) {\r\n                if (arrBots[i].inScene === objKey) {\r\n                    arrBots[i].inScene = null\r\n                    arrBots[i].container.position.y = -10000\r\n                    arrBots[i].removeCollisionMesh()\r\n                }\r\n            } \r\n        }\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    emitter.subscribe('playerMove')(pos => {\r\n        for (let i = 0; i < arrBots.length; ++i) {\r\n            if (!arrBots[i].inScene) continue;\r\n\r\n            const botWorldPos = new THREE.Vector3()\r\n            arrBots[i]._modelGroup.getWorldPosition(botWorldPos)\r\n            const distance = botWorldPos.distanceTo(pos)\r\n\r\n\r\n            if (arrBots[i]._state === 'say' && distance > 30) {\r\n                arrBots[i]._startRotate()\r\n                toggleDialog(pr.dispatch).toggleButtonDialog(false)\r\n                continue;\r\n            }\r\n\r\n\r\n            if (arrBots[i]._state !== 'say' && distance < 30) {\r\n                arrBots[i].prepareToSay(pos)\r\n                toggleDialog(pr.dispatch).toggleButtonDialog(true)\r\n                continue;\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    return {\r\n        groupBots,\r\n    } \r\n}\r\n\r\n\r\n","import { createStore , applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux'\r\nimport { FLOORS_CONF } from '../constants/constants_elements'\r\n\r\n\r\n\r\n\r\n\r\nconst DIALOGS_DATA = [\r\n    {\r\n     phrases: [\r\n         {\r\n             q: 'Hello there!',\r\n             a: 'Good day, carbon-based life form.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'What is this place ?',\r\n             a: 'This is an entrance to the entropic hyper-maze.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'And what happens if I enter it ?',\r\n             a: 'This place is waiting.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n  }, {\r\n     phrases: [\r\n         {\r\n             q: 'Say, where do these corridors lead ?',\r\n             a: 'They will lead you to the end.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'Ooook, I\\'m heading in then.',\r\n             a: 'We will meet again.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n  }, {\r\n  \r\n  \r\n  \r\n     phrases: [\r\n         {\r\n             q: 'What do you do here ?',\r\n             a: 'Collecting the energy of the night.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         },\r\n         {\r\n             q: 'Can you tell me which way is out of here ?',\r\n             a: 'It is about the journey, not the destination',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n  },\r\n  \r\n  \r\n  \r\n     {\r\n     phrases: [\r\n         {\r\n         q: 'Hey, it looks like I\\'m walking in circles.',\r\n         a: 'You have walked long enough.',\r\n         event: 'nextReply',\r\n         levelEvent: null,\r\n     },{\r\n         q: 'Meaning?',\r\n         a: 'The way to the next level is open to you.',\r\n         event: 'close',\r\n         levelEvent: 'addStairs',\r\n     },\r\n     ]\r\n  },\r\n  \r\n  \r\n     // %%%%%%%%%%%%%%%%%%%%%%% 22222222222222222 %%%%%%%%%%%%%%%%%%%%\r\n  \r\n     {\r\n     phrases: [\r\n         {\r\n             q: 'Hi, I heard I can find the \"end\" around here?',\r\n             a: 'Yes, I told you this is where the corridors lead.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'Man, you all look the same.',\r\n             a: 'We will meet again.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n  },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Soooo, is that you again ?',\r\n                 a: 'Yes. All of me are myself.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             }, {\r\n                 q: 'Yeah, just like those corridors.',\r\n                 a: 'The meaning of everything is in being whole.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Am I there yet?',\r\n                 a: 'The sign will be given when you are.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             }, {\r\n                 q: 'How do I know what it is?',\r\n                 a: 'I will give it to you.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'That\\'s the same exact corridor with you again.',\r\n                 a: 'You are ready for the next level.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n     // %%%%%%%%%%%%%%%%%%%%% 33333333 %%%%%%%%%%%%%%%%%%%%%%\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Hey man, seriously, how do I get out of here ?',\r\n                 a: 'You have not reached the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'We\\'ll how do you reach it ?',\r\n                 a: 'I have my way.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'So how\\'s your way btw ?',\r\n                 a: 'It is like yourself.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'And how long you\\'ve been on it ?',\r\n                 a: 'These walls can hear us.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'I think you\\'re weighing this corridor down.',\r\n                 a: 'The next level is open to you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    // %%%%%%%%%%%%%%%%%%%%% 444444444444444 %%%%%%%%%%%%%%\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Look bud, next level or not, nothing\\'s changed at all !',\r\n                 a: 'Except the number of steps.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'So this place counts steps ?',\r\n                 a: 'This is place is waiting.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'How long have you been here ?',\r\n                 a: 'How long is irrelevant. What matters is the journey.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Then why aren\\'t you on one?',\r\n                 a: 'With you walking for both of us, I do not have to.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Look, just make a new level, please.',\r\n                 a: 'You are ready. It is waiting for you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n    // %%%%%%%%%%%%%%%%%% 5555555 %%%%%%%%%%%%%%%%%%%\r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Wait, you are this place! You control all its fragments.',\r\n                 a: 'You have almost reached the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Why do you do this ?',\r\n                 a: 'It is my way to warp space. More movement. More fragments.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'How many people have been through here ?',\r\n                 a: 'Many are still here.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'So where are they?',\r\n                 a: 'Everyone has a different system of fragments.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Will you let me out ?',\r\n                 a: 'All ways lead to the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'I wanna meet the others.',\r\n                 a: 'The next level is waiting for you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n    // %%%%%%%%%%%%%%%%%%% 6666666666666666 %%%%%%%%%%%%%%%%%%\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Everything\\'s looped here.',\r\n                 a: 'Everything is looped with small differences.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'How many levels even are there ?',\r\n                 a: 'It all depends on you.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'That\\'s it, I\\'m done.',\r\n                 a: 'Have you reached your journey\\'s end ?',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Yes, you mad bastard! I have !',\r\n                 a: 'Then I am giving you the sign.',\r\n                 event: 'close',\r\n                 levelEvent: 'addWell',\r\n             },\r\n         ]\r\n     },\r\n  ]  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst appData = {\r\n    sceneEnvironment: {\r\n        color: FLOORS_CONF['-1']['start'].color,\r\n        fogNear: FLOORS_CONF['-1']['start'].fogNear,\r\n        fogFar: FLOORS_CONF['-1']['start'].fogFar,\r\n        backgroundImgKey: null,\r\n    },\r\n\r\n    playerQuadrant: {\r\n        oldDialogPlayerQuadrant: [0, 0, -50],\r\n        oldQuadrant: [0, 0, 0],\r\n        newQuadrant: [0, 0, 0],\r\n        counter: null,\r\n    },\r\n\r\n    level: {\r\n        isStartCorridorShow: true,\r\n    },\r\n\r\n    ui: {\r\n        isShowButtFullScreen: true,\r\n        isShowInfo: false,\r\n        isShowFinalMessage: false,\r\n        botAnswers: [],\r\n        userReplicies: [],\r\n        history: [],\r\n        isDialog: false,\r\n        isButtonDialog: false,\r\n\r\n        valueMachineName: null,\r\n    },\r\n\r\n    botIndex: -1,\r\n    phraseIndex: 0,\r\n    phrasesData: DIALOGS_DATA,\r\n}\r\n\r\n\r\n\r\nconst app = function(state = appData, action) {\r\n    if (action.type === 'SET_NAME') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                valueMachineName: action.val,\r\n            }\r\n        })\r\n    }\r\n\r\n    if (action.type === 'CLICK_FULL_SCREEN') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowButtFullScreen: false,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (action.type === 'EXIT_FULL_SCREEN') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowButtFullScreen: true,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (action.type === 'INFO_TOGGLE') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowFinalMessage: false,\r\n                isShowInfo: action.mode,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (action.type === 'TOGGLE_FINAL_MESSAGE') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowFinalMessage: action.mode,\r\n                isShowInfo: false,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    if (action.type === 'CHANGE_ENVIRONMENT') {\r\n        const { newQuadrant, environmentMode } = action\r\n\r\n        if (!FLOORS_CONF[newQuadrant[1]]) return state;\r\n\r\n        const { fogNear, fogFar, color, backgroundImgKey } = FLOORS_CONF[newQuadrant[1]][environmentMode]\r\n\r\n        return ({\r\n            ...state,\r\n            sceneEnvironment: {\r\n                fogNear,\r\n                fogFar,\r\n                color,\r\n                backgroundImgKey,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    if (action.type === 'CHANGE_QUADRANT') {\r\n        return ({\r\n            ...state,\r\n            playerQuadrant: {\r\n                ...state.playerQuadrant,\r\n                ...action,\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n\r\n    if (action.type === 'DESTROY_START_CORRIDOR') {\r\n        return ({\r\n            ...state,\r\n            level: {\r\n                ...state.level,\r\n                isStartCorridorShow: false,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    if (action.type === 'CLICK_PHRASE') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                botAnswers: [\r\n                    ...state.ui.botAnswers,\r\n                    action.phrase,\r\n                ],\r\n                userReplicies: [],\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    if (action.type === 'PHRASE_EVENT') {\r\n        const { event } = action.phrase\r\n\r\n        if (event === 'nextReply') {\r\n            const userReplicies = [state.phrasesData[state.botIndex].phrases[state.phraseIndex + 1]]\r\n\r\n            return ({\r\n                ...state,\r\n                phraseIndex: state.phraseIndex + 1,\r\n                ui: {\r\n                    ...state.ui,\r\n                    userReplicies,\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        if (event === 'close') {\r\n            return ({\r\n                ...state,\r\n                ui: {\r\n                    ...state.ui,\r\n                    userReplicies: [],\r\n                    isButtonDialog: true,\r\n                },\r\n                playerQuadrant: {\r\n                    ...state.playerQuadrant,\r\n                    oldDialogPlayerQuadrant: [...state.playerQuadrant.newQuadrant]\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (action.type === 'TOGGLE_DIALOG') {\r\n\r\n        let isNewBot = false\r\n        const { oldDialogPlayerQuadrant, newQuadrant } = state.playerQuadrant\r\n        if (\r\n            oldDialogPlayerQuadrant[0] !== newQuadrant[0] ||\r\n            oldDialogPlayerQuadrant[1] !== newQuadrant[1] ||\r\n            oldDialogPlayerQuadrant[2] !== newQuadrant[2]\r\n        ) isNewBot = true\r\n\r\n\r\n\r\n\r\n        if (!isNewBot) {\r\n            return ({\r\n                ...state,\r\n                ui: {\r\n                    ...state.ui,\r\n                    isDialog: action.isDialog,\r\n                    isButtonDialog: true,\r\n                },\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n        const phraseIndex = 0\r\n        const botIndex = state.botIndex + 1\r\n        const isButtonDialog = false\r\n        /////////////////////////////////////////////////////\r\n\r\n\r\n        ///////////////////////////////////////////// TODO: REMOVE\r\n        // let botIndex = state.botIndex\r\n        // let phraseIndex = state.phraseIndex\r\n        // if (action.isDialog) {\r\n        //     botIndex = state.botIndex + 1\r\n        //     phraseIndex = 0\r\n        // }\r\n        // const isButtonDialog = !action.isDialog\r\n        // /////////////////////////////////////////////////\r\n\r\n\r\n        const userReplicies = state.phrasesData[botIndex] ? [state.phrasesData[botIndex].phrases[phraseIndex]] : []\r\n\r\n        return ({\r\n            ...state,\r\n\r\n            ui: {\r\n                ...state.ui,\r\n                userReplicies,\r\n                botAnswers: [],\r\n                isDialog: action.isDialog,\r\n                isButtonDialog,\r\n            },\r\n\r\n            isCanChangeBotIndex: false,\r\n            botIndex,\r\n            phraseIndex,\r\n        })\r\n    }\r\n\r\n    if (action.type === 'TOGGLE_BUTTON') {\r\n\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isDialog: false,\r\n                isButtonDialog: action.isButtonDialog,\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n    return state\r\n}\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({ app })\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n","import { createDeviceResizer } from './helpers/util_deviceResizer'\r\nimport { KeyBoard } from './helpers/util_keyBoard'\r\nimport { emitter } from './helpers/util_emitter'\r\nimport { createFrameUpdater } from './helpers/util_frameUpater'\r\nimport { createActionByChangedQuadrant } from './store/actionByChangeQuadrant'\r\nimport { startPlay } from './store/actions'\r\nimport { pr } from './componentsReact/App'\r\n\r\nimport { ASSETS_TO_LOAD } from './constants/constants_elements'\r\n\r\nimport { loadAssets } from './helpers/utils_loadAssets'\r\nimport { prepareMeshesFromAssets } from './helpers/helper_prepareMeshesFromAssets'\r\n\r\nimport { createStudio } from './entities/createStudio'\r\nimport { createPlayer } from './entities/createPlayer'\r\n\r\n\r\nimport { showStartButton } from './systems/systemHtml_intro'\r\nimport { createLevel } from './systems/system_level'\r\nimport { createSystemBots } from './systems/system_bots'\r\nimport { createSystemMachines } from './systems/system_machines'\r\n\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { FRAME_UPDATE } from './constants/constants_elements'\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './componentsReact/App';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/createStore'\r\n\r\n\r\n  \r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n\r\n\r\n\r\n\r\ncreateDeviceResizer(emitter)\r\n\r\n\r\nconst init = assets => {\r\n    console.log(assets)\r\n    createFrameUpdater(emitter)\r\n    emitter.subscribe(FRAME_UPDATE)(() => TWEEN.update())\r\n\r\n    const studio = createStudio(emitter, assets, store)\r\n\r\n    /** player */\r\n    new KeyBoard(emitter)\r\n    const player = createPlayer(emitter)\r\n    studio.setCamera(player.getCamera())\r\n    studio.addToScene(player.getObj())\r\n\r\n    /** prepare assets */\r\n    const { allMeshes,  rooms, materials } = prepareMeshesFromAssets(assets)\r\n\r\n    /** level */\r\n    const { group } = createLevel(emitter, rooms, allMeshes, store)\r\n    studio.addToScene(group)\r\n\r\n    /** bots */\r\n    const systemBots = createSystemBots(assets, materials, emitter, store)\r\n    studio.addToScene(systemBots.groupBots)\r\n\r\n    /** machines */\r\n    const sustemMachines = createSystemMachines(assets, materials, emitter, store)\r\n    studio.addToScene(sustemMachines.group)\r\n\r\n\r\n    createActionByChangedQuadrant()\r\n    \r\n    setTimeout(() => player.start(), 500)\r\n\r\n\r\n    /** UI */\r\n    showStartButton(emitter)\r\n    emitter.subscribe('setLanguage')(() => {\r\n        setTimeout(startPlay(pr.dispatch).startPlay, 1000)\r\n        setTimeout(startPlay(pr.dispatch).showBackground, 3000)\r\n    })\r\n}\r\n\r\n\r\n\r\nwindow.addEventListener('load', () => loadAssets(ASSETS_TO_LOAD).then(init))\r\n","import { pr } from '../componentsReact/App'\r\nimport { clickFullScreen } from '../store/actions'\r\n\r\n\r\n\r\nconst MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport function createDeviceResizer (emitter) {\r\n\r\n    const appWrapper = document.querySelector('.app-wrapper')\r\n    emitter.subscribe('mouseDown')(key => {\r\n        if (key === 'butt-fullscreen') openAppFullScreenIfMobile()\r\n    })\r\n\r\n    /** fullscreen */\r\n    const openAppFullScreenIfMobile = () => {\r\n\r\n\r\n        if (appWrapper.requestFullscreen) {\r\n            appWrapper.requestFullscreen()\r\n        } else if (appWrapper.mozRequestFullScreen) {\r\n            appWrapper.mozRequestFullScreen()\r\n        } else if (appWrapper.webkitRequestFullscreen) {\r\n            appWrapper.webkitRequestFullscreen()\r\n        } else if (appWrapper.msRequestFullscreen) {\r\n            appWrapper.msRequestFullscreen()\r\n        }\r\n    }\r\n\r\n    /** resize */\r\n    const resize = e => {\r\n        appWrapper.style.width = window.innerWidth + 'px'\r\n        appWrapper.style.height = window.innerHeight + 'px'\r\n        appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n        if (!document.fullscreenElement) {\r\n            clickFullScreen(pr.dispatch).exitFullScreen()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    window.addEventListener('resize', resize)\r\n    resize()\r\n}\r\n\r\n\r\n\r\n// const checkTouch = () =>\r\n//     navigator.maxTouchPoints || 'ontouchstart' in document.documentElement\r\n//\r\n//\r\n//\r\n// const checkIsCanOrientation = () =>\r\n//     typeof window.orientation !== 'undefined'\r\n\r\n","import * as R from 'ramda'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\n\r\n\r\n\r\nexport function createFrameUpdater (eventEmitter) {\r\n\r\n    const emitFrameUpdate = eventEmitter.emit(FRAME_UPDATE)\r\n\r\n    let data = {\r\n        time: 0,\r\n        delta: 0,\r\n        count: 0,\r\n        oldTime: 0\r\n    }\r\n\r\n    const getDataFromGlobalVar = () => data\r\n\r\n    const updateTime = data => { \r\n        data.time = Date.now()\r\n        return data\r\n    }\r\n\r\n    const updateDelta = data => { \r\n        data.delta = (data.time - data.oldTime) * 0.001\r\n        if (isNaN(data.delta) || data.delta > 1000 || data.delta === 0 ) {\r\n            data.delta = 1000/60 * 0.001;\r\n        }\r\n        return data\r\n    }\r\n\r\n    const updateCount = data => { \r\n        data.count = data.delta / (1/60)\r\n        return data\r\n    }\r\n\r\n    const emit = data => { \r\n        emitFrameUpdate(data)\r\n        return data\r\n    }\r\n\r\n    const updateOldTime = data => { \r\n        data.oldTime = data.time\r\n        return data\r\n    }\r\n\r\n    const saveDataInGlobalVar = dataFromChine => {\r\n        data = dataFromChine\r\n        return data\r\n    }\r\n\r\n    // const logger = data => {\r\n    //     console.log(data)\r\n    //     return data\r\n    // }\r\n\r\n    const update = R.pipe(\r\n        getDataFromGlobalVar,\r\n        updateTime,\r\n        updateDelta,\r\n        updateCount, \r\n        emit, \r\n        updateOldTime, \r\n        saveDataInGlobalVar\r\n    )\r\n\r\n    const animate = () => {\r\n        requestAnimationFrame(animate)\r\n        update(data)\r\n    }\r\n\r\n    animate() \r\n}\r\n\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { studioConfig } from '../constants/constants_elements'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\r\nimport { Saturate } from '../shaders/saturate'\r\n\r\n\r\n\r\n\r\n\r\nexport function createStudio (emitter, assets, store) {\r\n    const { canId, rendererCon, clearColor, amb } = studioConfig\r\n\r\n    const canvas = document.getElementById(canId)\r\n    rendererCon.canvas = canvas\r\n\r\n    const renderer = new THREE.WebGLRenderer(rendererCon)\r\n    renderer.setClearColor(clearColor)\r\n    renderer.setPixelRatio(window.devicePixelRatio)\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n    const scene = new THREE.Scene()\r\n\r\n    {\r\n        const { color, fogNear, fogFar, backgroundImgKey } = store.getState().app.sceneEnvironment\r\n        scene.background = assets[backgroundImgKey] || null\r\n        scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n    }\r\n\r\n\r\n    let lightA\r\n    {\r\n        const { color, strength } = amb\r\n        lightA = new THREE.AmbientLight( color, strength )\r\n        scene.add( lightA )\r\n    }\r\n\r\n    let camera = null\r\n\r\n\r\n    const composer = new EffectComposer(renderer)\r\n    //composer.addPass(new RenderPass(scene, camera))\r\n\r\n\r\n\r\n    const resize = () => {\r\n        const size = { width: window.innerWidth, height: window.innerHeight }\r\n        renderer.setSize(size.width, size.height)\r\n        composer.setSize(size.width, size.height)\r\n        if (camera) {\r\n            camera.aspect = size.width/size.height\r\n            camera.updateProjectionMatrix()\r\n        }\r\n    }\r\n    window.addEventListener('resize', resize)\r\n    resize()\r\n\r\n\r\n\r\n\r\n    const addToScene = scene.add.bind(scene)\r\n    //const drawFrame = () => camera && renderer.render(scene, camera)\r\n    const drawFrame = () => camera && composer.render(scene, camera)\r\n    emitter.subscribe(FRAME_UPDATE)(drawFrame)\r\n\r\n\r\n\r\n    \r\n\r\n    let\r\n        oldFogNear = scene.fog.near,\r\n        oldFogFar = scene.fog.far,\r\n        oldColor = scene.fog.color,\r\n        oldBackgroundImgKey = store.getState().app.sceneEnvironment.backgroundImgKey\r\n\r\n\r\n\r\n\r\n    store.subscribe(() => {\r\n        const newState = store.getState()\r\n        const { fogNear, fogFar, color, backgroundImgKey } = newState.app.sceneEnvironment\r\n\r\n        if (fogNear !== oldFogNear || fogFar !== oldFogFar || color !== oldColor ) {\r\n            let startData = {\r\n                color: scene.fog.color,\r\n                near: scene.fog.near,\r\n                far: scene.fog.far,\r\n            }\r\n            let endData = {\r\n                color: new THREE.Color(color),\r\n                near: fogNear,\r\n                far: fogFar,\r\n            }\r\n\r\n            oldFogNear = fogNear\r\n            oldFogFar = fogFar\r\n            oldColor = color\r\n\r\n            new TWEEN.Tween(startData)\r\n                .to(endData, 3000)\r\n                .onUpdate(() => {\r\n                    scene.fog.color = startData.color\r\n                    scene.fog.near = startData.near\r\n                    scene.fog.far = startData.far\r\n                    lightA.color = startData.color\r\n                    renderer.setClearColor(startData.color)\r\n                })\r\n                .start()\r\n        }\r\n\r\n\r\n        if (backgroundImgKey !== oldBackgroundImgKey) {\r\n            oldBackgroundImgKey = backgroundImgKey\r\n            scene.background = assets[backgroundImgKey] || null\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return {\r\n        setCamera: cam => {\r\n\r\n            camera = cam\r\n            composer.addPass(new RenderPass(scene, cam))\r\n            composer.addPass(new ShaderPass(Saturate))\r\n\r\n        },\r\n        addToScene,\r\n    }\r\n}\r\n\r\n","import * as THREE from 'three'\r\n//import { FRAME_UPDATE } from '../constants/constants_elements'\r\n//import { Bot } from '../entities/Bot'\r\nimport { pr } from '../componentsReact/App'\r\nimport { toggleMachine  } from '../store/actions'\r\n\r\n\r\n//const S = 175.335\r\n//const H = 70\r\n//const H_BOT = 14\r\n\r\n// const MACHINES = {\r\n//     13611_Thickness_Planer_v1_L2002: {\r\n//\r\n// }\r\n\r\n\r\nexport const createSystemMachines = (assets, materials, emitter, store) => {\r\n    //Bot.botMaterial = materials.iron\r\n    //Bot.botScene = assets.bot\r\n\r\n\r\n\r\n    const group = new THREE.Group()\r\n    const arr = []\r\n\r\n\r\n\r\n    //const initState = store.getState()\r\n    //let saveIsStartCorridorShow = initState.app.level.isStartCorridorShow\r\n\r\n    //store.subscribe(() => {\r\n    //     const newState = store.getState()\r\n    //     if (saveIsStartCorridorShow && saveIsStartCorridorShow !== newState.app.level.isStartCorridorShow) {\r\n    //         saveIsStartCorridorShow = newState.app.level.isStartCorridorShow\r\n    //\r\n    //         for (let i = 0; i < arrBots.length; ++i) {\r\n    //             arrBots[i].inScene = null\r\n    //             arrBots[i].container.position.y = -10000\r\n    //             arrBots[i].removeCollisionMesh()\r\n    //         }\r\n    //     }\r\n    // })\r\n\r\n\r\n\r\n\r\n    const m13610 = assets['m13610'].scene.children[0]\r\n    group.add(m13610)\r\n    m13610.material.emissive.setHex(0x666666)\r\n    m13610.material.needsUpdate = true\r\n    m13610.position.set(65, -86.097900390625, 893.5679999999998)\r\n    m13610.scale.set(.2, .2, .2)\r\n    m13610.userData.name = 'm13610'\r\n    arr.push(m13610)\r\n\r\n    const m13611 = assets['m13611'].scene.children[0]\r\n    group.add(m13611)\r\n    m13611.material.emissive.setHex( 0x666666 );\r\n    m13611.position.set(120, -86.097900390625, 880.5679999999998)\r\n    m13611.scale.set(.1, .1, .1)\r\n    m13611.userData.name = 'm13611'\r\n    console.log(m13611)\r\n    arr.push(m13611)\r\n\r\n\r\n    let saveIsNearMachine = false\r\n\r\n    emitter.subscribe('playerMove')(pos => {\r\n        let isNearMachine = false\r\n        for (let i = 0; i < arr.length; ++i) {\r\n            const botWorldPos = new THREE.Vector3()\r\n            arr[i].getWorldPosition(botWorldPos)\r\n            const distance = botWorldPos.distanceTo(pos)\r\n\r\n            if (distance < 27) {\r\n                isNearMachine = true\r\n                toggleMachine(pr.dispatch).toggleName(arr[i].userData.name)\r\n                console.log(arr[i].userData.name)\r\n            }\r\n        }\r\n\r\n        if (isNearMachine !== saveIsNearMachine) {\r\n            saveIsNearMachine = isNearMachine\r\n            !isNearMachine && toggleMachine(pr.dispatch).toggleName(null)\r\n        }\r\n\r\n\r\n        // for (let i = 0; i < arrBots.length; ++i) {\r\n        //     if (!arrBots[i].inScene) continue;\r\n        //\r\n        //     const botWorldPos = new THREE.Vector3()\r\n        //     arrBots[i]._modelGroup.getWorldPosition(botWorldPos)\r\n        //     const distance = botWorldPos.distanceTo(pos)\r\n        //\r\n        //\r\n        //     if (arrBots[i]._state === 'say' && distance > 30) {\r\n        //         arrBots[i]._startRotate()\r\n        //         toggleDialog(pr.dispatch).toggleButtonDialog(false)\r\n        //         continue;\r\n        //     }\r\n        //\r\n        //\r\n        //     if (arrBots[i]._state !== 'say' && distance < 30) {\r\n        //         arrBots[i].prepareToSay(pos)\r\n        //         toggleDialog(pr.dispatch).toggleButtonDialog(true)\r\n        //         continue;\r\n        //     }\r\n        // }\r\n    })\r\n\r\n\r\n    return {\r\n        group,\r\n    }\r\n}\r\n\r\n\r\n"],"sourceRoot":""}